"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

Creates a Globally distributed autonomous database.


Usage
=====

   oci distributed-database distributed-autonomous-db-service distributed-autonomous-database create [OPTIONS]


Required Parameters
===================

--catalog-details [complex type]

Collection of catalog for the Globally distributed autonomous
database. This is a complex type whose value must be valid JSON. The
value can be provided as a string on the command line or passed in as
a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--character-set [text]

The character set for the database.

--compartment-id, -c [text]

The OCID of the Globally distributed autonomous database compartment.

--database-version [text]

Oracle Database version for the shards and catalog used in Globally
distributed autonomous database.

--db-deployment-type [text]

The distributed autonomous database deployment type.

Accepted values are:

   ADB_D

--db-workload [text]

Possible workload types.

Accepted values are:

   DW, OLTP

--display-name [text]

The display name of the Globally distributed autonomous database.

--listener-port [integer]

The listener port number for the Globally distributed autonomous
database.

--ncharacter-set [text]

The national character set for the database.

--ons-port-local [integer]

Ons local port number.

--ons-port-remote [integer]

Ons remote port number.

--prefix [text]

Unique name prefix for the Globally distributed autonomous databases.
Only alpha-numeric values are allowed. First character has to be a
letter followed by any combination of letter and number.

--private-endpoint-ids [complex type]

The collection of OCID of the private endpoint associated with
Globally distributed autonomous database. This is a complex type whose
value must be valid JSON. The value can be provided as a string on the
command line or passed in as a file using the file://path/to/file
syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--shard-details [complex type]

Collection of shards for the Globally distributed autonomous database.
This is a complex type whose value must be valid JSON. The value can
be provided as a string on the command line or passed in as a file
using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--sharding-method [text]

Sharding Methods for the Globally distributed autonomous database.

Accepted values are:

   SYSTEM, USER


Optional Parameters
===================

--chunks [integer]

The default number of unique chunks in a shardspace. The value of
chunks must be greater than 2 times the size of the largest shardgroup
in any shardspace.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{“bar-
key”: “value”}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--listener-port-tls [integer]

The TLS listener port number for Globally distributed autonomous
database.

--max-wait-seconds [integer]

The maximum time to wait for the work request to reach the state
defined by "--wait-for-state". Defaults to 1200 seconds.

--replication-factor [integer]

The Replication factor for RAFT replication based Globally distributed
autonomous database. Currently supported values are 3, 5 and 7.

--replication-method [text]

The Replication method for Globally distributed autonomous database.
Use RAFT for Raft replication, and DG for DataGuard. If
replicationMethod is not provided, it defaults to DG.

Accepted values are:

   DG, RAFT

--replication-unit [integer]

For RAFT replication based Globally distributed autonomous database,
the value should be atleast twice the number of shards.

--wait-for-state [text]

This operation asynchronously creates, modifies or deletes a resource
and uses a work request to track the progress of the operation.
Specify this option to perform the action and then wait until the work
request reaches a certain state. Multiple states can be specified,
returning on the first state. For example, "--wait-for-state"
SUCCEEDED "--wait-for-state" FAILED would return on whichever
lifecycle state is reached first. If timeout is reached, a return code
of 2 is returned. For any other error, a return code of 1 is returned.

Accepted values are:

   ACCEPTED, CANCELED, CANCELING, FAILED, IN_PROGRESS, NEEDS_ATTENTION, SUCCEEDED, WAITING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the work request
has reached the state defined by "--wait-for-state". Defaults to 30
seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci distributed-database distributed-autonomous-db-service distributed-autonomous-database create --generate-param-json-input catalog-details > catalog-details.json
       oci distributed-database distributed-autonomous-db-service distributed-autonomous-database create --generate-param-json-input private-endpoint-ids > private-endpoint-ids.json
       oci distributed-database distributed-autonomous-db-service distributed-autonomous-database create --generate-param-json-input shard-details > shard-details.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export character_set=<substitute-value-of-character_set> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-character-set
       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-compartment-id
       export database_version=<substitute-value-of-database_version> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-database-version
       export db_deployment_type=<substitute-value-of-db_deployment_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-db-deployment-type
       export db_workload=<substitute-value-of-db_workload> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-db-workload
       export display_name=<substitute-value-of-display_name> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-display-name
       export listener_port=<substitute-value-of-listener_port> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-listener-port
       export ncharacter_set=<substitute-value-of-ncharacter_set> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-ncharacter-set
       export ons_port_local=<substitute-value-of-ons_port_local> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-ons-port-local
       export ons_port_remote=<substitute-value-of-ons_port_remote> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-ons-port-remote
       export prefix=<substitute-value-of-prefix> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-prefix
       export sharding_method=<substitute-value-of-sharding_method> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/distributed-database/distributed-autonomous-db-service/distributed-autonomous-database/create.html#cmdoption-sharding-method

       oci distributed-database distributed-autonomous-db-service distributed-autonomous-database create --catalog-details file://catalog-details.json --character-set $character_set --compartment-id $compartment_id --database-version $database_version --db-deployment-type $db_deployment_type --db-workload $db_workload --display-name $display_name --listener-port $listener_port --ncharacter-set $ncharacter_set --ons-port-local $ons_port_local --ons-port-remote $ons_port_remote --prefix $prefix --private-endpoint-ids file://private-endpoint-ids.json --shard-details file://shard-details.json --sharding-method $sharding_method
