"create"
********

* Description

* Usage

* Required Parameters

* Optional Parameters

* Global Parameters

* Example using required parameter


Description
===========

This API will create a demand signal item representing a resource
request. This needs to be grouped under a demand signal.


Usage
=====

   oci capacity-management demand-signal occm-demand-signal-item create [OPTIONS]


Required Parameters
===================

--compartment-id, -c [text]

The OCID of the tenancy from which the demand signal item was created.

--demand-quantity [integer]

The quantity of the resource that you want to demand from OCI.

--ds-catalog-resource-id [text]

The OCID of the correponding demand signal catalog resource.

--ds-id [text]

The OCID of the demand signal under which we need to create this item.

--request-type [text]

The type of request (DEMAND or RETURN) that you want to make for this
demand signal item.

Accepted values are:

   DEMAND

--resource-properties [complex type]

A map of various properties associated with the OCI resource. This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--target-region [text]

The name of region for which you want to request the OCI resource.

--time-needed-before [datetime]

the date before which you would ideally like the OCI resource to be
delivered to you.

   The following datetime formats are supported:


UTC with microseconds
---------------------

   Format: YYYY-MM-DDTHH:mm:ss.ssssssTZD
   Example: 2017-09-15T20:30:00.123456Z

   UTC with milliseconds
   ***********************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ss.sssTZD
       Example: 2017-09-15T20:30:00.123Z

   UTC without milliseconds
   **************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T20:30:00Z

   UTC with minute precision
   **************************
   .. code::

       Format: YYYY-MM-DDTHH:mmTZD
       Example: 2017-09-15T20:30Z


Timezone with microseconds
--------------------------

   Format: YYYY-MM-DDTHH:mm:ssTZD
   Example: 2017-09-15T12:30:00.456789-08:00, 2017-09-15T12:30:00.456789-0800

   Timezone with milliseconds
   ***************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T12:30:00.456-08:00, 2017-09-15T12:30:00.456-0800

   Timezone without milliseconds
   *******************************
   .. code::

       Format: YYYY-MM-DDTHH:mm:ssTZD
       Example: 2017-09-15T12:30:00-08:00, 2017-09-15T12:30:00-0800

   Timezone with minute precision
   *******************************
   .. code::

       Format: YYYY-MM-DDTHH:mmTZD
       Example: 2017-09-15T12:30-08:00, 2017-09-15T12:30-0800

   Short date and time
   ********************
   The timezone for this date and time will be taken as UTC (Needs to be surrounded by single or double quotes)

   .. code::

       Format: 'YYYY-MM-DD HH:mm' or "YYYY-MM-DD HH:mm"
       Example: '2017-09-15 17:25'

   Date Only
   **********
   This date will be taken as midnight UTC of that day

   .. code::

       Format: YYYY-MM-DD
       Example: 2017-09-15

   Epoch seconds
   **************
   .. code::

       Example: 1412195400


Optional Parameters
===================

--ad [text]

The name of the availability domain for which you want to request the
OCI resource. This is an optional parameter.

--defined-tags [complex type]

Defined tags for this resource. Each key is predefined and scoped to a
namespace. Example: *{“foo-namespace”: {“bar-key”: “value”}}* This is
a complex type whose value must be valid JSON. The value can be
provided as a string on the command line or passed in as a file using
the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--freeform-tags [complex type]

Simple key-value pair that is applied without any predefined name,
type or scope. Exists for cross-compatibility only. Example: *{“bar-
key”: “value”}* This is a complex type whose value must be valid JSON.
The value can be provided as a string on the command line or passed in
as a file using the file://path/to/file syntax.

The "--generate-param-json-input" option can be used to generate an
example of the JSON which must be provided. We recommend storing this
example in a file, modifying it as needed and then passing it back in
via the file:// syntax.

--from-json [text]

Provide input to this command as a JSON document from a file using the
file://path-to/file syntax.

The "--generate-full-command-json-input" option can be used to
generate a sample json file to be used with this command option. The
key names are pre-populated and match the command option names
(converted to camelCase format, e.g. compartment-id –> compartmentId),
while the values of the keys need to be populated by the user before
using the sample file as an input to this command. For any command
option that accepts multiple values, the value of the key can be a
JSON array.

Options can still be provided on the command line. If an option exists
in both the JSON document and the command line then the command line
specified value will be used.

For examples on usage of this option, please see our “using CLI with
advanced JSON options” link: https://docs.cloud.oracle.com/iaas/Conte
nt/API/SDKDocs/cliusing.htm#AdvancedJSONOptions

--max-wait-seconds [integer]

The maximum time to wait for the resource to reach the lifecycle state
defined by "--wait-for-state". Defaults to 1200 seconds.

--notes [text]

This field will serve as notes section for you. You can use this
section to convey a message to OCI regarding your resource request.

NOTE: The previous value gets overwritten with the new one for this
once updated.

--target-compartment-id [text]

The OCID of the tenancy for which you want to request the OCI resource
for. This is an optional parameter.

--wait-for-state [text]

This operation creates, modifies or deletes a resource that has a
defined lifecycle state. Specify this option to perform the action and
then wait until the resource reaches a given lifecycle state. Multiple
states can be specified, returning on the first state. For example, "
--wait-for-state" SUCCEEDED "--wait-for-state" FAILED would return on
whichever lifecycle state is reached first. If timeout is reached, a
return code of 2 is returned. For any other error, a return code of 1
is returned.

Accepted values are:

   ACTIVE, CREATING, DELETED, DELETING, FAILED, UPDATING

--wait-interval-seconds [integer]

Check every "--wait-interval-seconds" to see whether the resource has
reached the lifecycle state defined by "--wait-for-state". Defaults to
30 seconds.


Global Parameters
=================

Use "oci --help" for help on global parameters.

"--auth-purpose", "--auth", "--cert-bundle", "--cli-auto-prompt", "--
cli-rc-file", "--config-file", "--connection-timeout", "--debug", "--
defaults-file", "--endpoint", "--generate-full-command-json-input", "
--generate-param-json-input", "--help", "--latest-version", "--max-
retries", "--no-retry", "--opc-client-request-id", "--opc-request-id",
"--output", "--profile", "--proxy", "--query", "--raw-output", "--
read-timeout", "--realm-specific-endpoint", "--region", "--release-
info", "--request-id", "--version", "-?", "-d", "-h", "-i", "-v"


Example using required parameter
================================

Copy and paste the following example into a JSON file, replacing the
example parameters with your own.

       oci capacity-management demand-signal occm-demand-signal-item create --generate-param-json-input resource-properties > resource-properties.json

Copy the following CLI commands into a file named example.sh. Run the
command by typing “bash example.sh” and replacing the example
parameters with your own.

Please note this sample will only work in the POSIX-compliant bash-
like shell. You need to set up the OCI configuration and appropriate
security policies before trying the examples.

       export compartment_id=<substitute-value-of-compartment_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-compartment-id
       export demand_quantity=<substitute-value-of-demand_quantity> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-demand-quantity
       export ds_catalog_resource_id=<substitute-value-of-ds_catalog_resource_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-ds-catalog-resource-id
       export ds_id=<substitute-value-of-ds_id> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-ds-id
       export request_type=<substitute-value-of-request_type> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-request-type
       export target_region=<substitute-value-of-target_region> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-target-region
       export time_needed_before=<substitute-value-of-time_needed_before> # https://docs.cloud.oracle.com/en-us/iaas/tools/oci-cli/latest/oci_cli_docs/cmdref/capacity-management/demand-signal/occm-demand-signal-item/create.html#cmdoption-time-needed-before

       oci capacity-management demand-signal occm-demand-signal-item create --compartment-id $compartment_id --demand-quantity $demand_quantity --ds-catalog-resource-id $ds_catalog_resource_id --ds-id $ds_id --request-type $request_type --resource-properties file://resource-properties.json --target-region $target_region --time-needed-before $time_needed_before
